package Staff;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


public class staffUser extends javax.swing.JInternalFrame {

    
    public staffUser() {
        initComponents();
        Connect();
        showTable();
        background();
        autoBookID();
        txtuid.setEditable(false);
    }
    
    Connection con; 
    PreparedStatement pst;
    ResultSet rs; 
    
    public final void Connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/libraryManagementSystem", "root", "");
            System.out.println("Database connection successful.");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error connecting to database: " + ex.getMessage());
        }
    }
    
    
    public final void showTable() {
    try {
        String query = "SELECT * FROM Users";
        pst = con.prepareStatement(query);
      
        rs = pst.executeQuery();

        DefaultTableModel bookModel = (DefaultTableModel) tblusers.getModel();
        bookModel.setRowCount(0); // Clear previous rows

        while (rs.next()) {
            int userID = rs.getInt("user_id");
            String username = rs.getString("username");
            String email = rs.getString("email");
            String password = rs.getString("password");
            String contact = rs.getString("contact");
             String role = rs.getString("role");
            Date date = rs.getDate("created_at");
            

            bookModel.addRow(new Object[]{userID, username, contact,email, password, role, date});
        }
    } catch (SQLException ex) {
        Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    public final void autoBookID() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/libraryManagementSystem", "root", "");

        // Get the highest book_id from the Books table
        pst = con.prepareStatement("SELECT MAX(user_id) FROM Users");
        rs = pst.executeQuery();

        if (rs.next()) {
            String maxID = rs.getString(1); // Get the highest book_id

            if (maxID != null) {
                int num = Integer.parseInt(maxID) + 1; // Increment the ID
                txtuid.setText(String.valueOf(num)); // Set it in the text field
            } else {
                txtuid.setText("1"); // If no records exist, start from 1
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error generating User ID!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
    }
}


    
    public final void background(){
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI UI = (BasicInternalFrameUI) this.getUI();
        UI.setNorthPane(null);
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtuid = new javax.swing.JTextField();
        txtuname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtpass = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblusers = new rojerusan.RSTableMetro();
        jLabel1 = new javax.swing.JLabel();
        cmbrole = new javax.swing.JComboBox<>();
        rSMaterialButtonRectangle2 = new rojerusan.RSMaterialButtonRectangle();
        rSMaterialButtonRectangle3 = new rojerusan.RSMaterialButtonRectangle();
        rSMaterialButtonRectangle4 = new rojerusan.RSMaterialButtonRectangle();
        rSMaterialButtonRectangle5 = new rojerusan.RSMaterialButtonRectangle();

        jPanel7.setBackground(new java.awt.Color(240, 237, 226));
        jPanel7.setPreferredSize(new java.awt.Dimension(1238, 750));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel2.setText("USE ID");

        txtuid.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txtuid.setPreferredSize(new java.awt.Dimension(78, 30));
        txtuid.setSize(new java.awt.Dimension(78, 30));
        txtuid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuidActionPerformed(evt);
            }
        });

        txtuname.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txtuname.setPreferredSize(new java.awt.Dimension(78, 30));
        txtuname.setSize(new java.awt.Dimension(78, 30));
        txtuname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel3.setText("USERNAME");

        txtphone.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txtphone.setPreferredSize(new java.awt.Dimension(78, 30));
        txtphone.setSize(new java.awt.Dimension(78, 30));
        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel4.setText("PHONE");

        txtemail.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txtemail.setPreferredSize(new java.awt.Dimension(78, 30));
        txtemail.setSize(new java.awt.Dimension(78, 30));
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel9.setText("EMAIL");

        jLabel10.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel10.setText("PASSWORD");

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel11.setText("ROLE");

        txtpass.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txtpass.setPreferredSize(new java.awt.Dimension(78, 30));
        txtpass.setSize(new java.awt.Dimension(78, 30));
        txtpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpassActionPerformed(evt);
            }
        });

        tblusers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Username", "Phone", "Email", "Password", "Role", "Join date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblusers.setColorBackgoundHead(new java.awt.Color(255, 255, 255));
        tblusers.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tblusers.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tblusers.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblusers.setColorFilasForeground1(new java.awt.Color(61, 58, 87));
        tblusers.setColorFilasForeground2(new java.awt.Color(61, 58, 87));
        tblusers.setColorForegroundHead(new java.awt.Color(0, 0, 0));
        tblusers.setColorSelBackgound(new java.awt.Color(61, 58, 87));
        tblusers.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        tblusers.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblusers.setFuenteFilasSelect(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblusers.setGridColor(new java.awt.Color(204, 204, 204));
        tblusers.setRowHeight(30);
        tblusers.setSelectionBackground(new java.awt.Color(61, 58, 87));
        tblusers.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblusers.setShowGrid(false);
        tblusers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblusersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblusers);

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(50, 61, 46));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Users");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));

        cmbrole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Staff", "Member" }));
        cmbrole.setSelectedIndex(-1);
        cmbrole.setPreferredSize(new java.awt.Dimension(78, 30));
        cmbrole.setSize(new java.awt.Dimension(72, 30));

        rSMaterialButtonRectangle2.setBackground(new java.awt.Color(50, 61, 46));
        rSMaterialButtonRectangle2.setText("ADD");
        rSMaterialButtonRectangle2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSMaterialButtonRectangle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonRectangle2ActionPerformed(evt);
            }
        });

        rSMaterialButtonRectangle3.setBackground(new java.awt.Color(50, 61, 46));
        rSMaterialButtonRectangle3.setText("UPDATE");
        rSMaterialButtonRectangle3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSMaterialButtonRectangle3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonRectangle3ActionPerformed(evt);
            }
        });

        rSMaterialButtonRectangle4.setBackground(new java.awt.Color(50, 61, 46));
        rSMaterialButtonRectangle4.setText("DELETE");
        rSMaterialButtonRectangle4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSMaterialButtonRectangle4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonRectangle4ActionPerformed(evt);
            }
        });

        rSMaterialButtonRectangle5.setBackground(new java.awt.Color(50, 61, 46));
        rSMaterialButtonRectangle5.setText("CLEAR");
        rSMaterialButtonRectangle5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSMaterialButtonRectangle5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonRectangle5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 47, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbrole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtpass, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtuname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtuid, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMaterialButtonRectangle2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSMaterialButtonRectangle3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMaterialButtonRectangle4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSMaterialButtonRectangle5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtuname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbrole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rSMaterialButtonRectangle2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSMaterialButtonRectangle4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSMaterialButtonRectangle3, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(rSMaterialButtonRectangle5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1249, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtuidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuidActionPerformed

    private void txtunameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunameActionPerformed

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphoneActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpassActionPerformed

    private void rSMaterialButtonRectangle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonRectangle2ActionPerformed
       
        try {
            // Check if fields are empty
            if (txtuname.getText().trim().isEmpty() || txtphone.getText().trim().isEmpty() || 
                txtemail.getText().trim().isEmpty() || cmbrole.getSelectedIndex() == -1 ||
                txtpass.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this, "All fields must be filled!", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get input values
            String uname = txtuname.getText();
            String phone = txtphone.getText();
            String email = txtemail.getText();
            String role = cmbrole.getSelectedItem().toString();
            String pass = txtuname.getText();
           

            // Confirm insertion
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to add this user?", 
                                                        "Confirm", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // SQL query to insert book
                String sql = "INSERT INTO users (username, email, password, contact, role   ) VALUES (?, ?, ?, ?, ?)";
                pst = con.prepareStatement(sql);

                pst.setString(1, uname);
                pst.setString(2, email);
                pst.setString(3, pass);
                pst.setString(4, phone);
                pst.setString(5, role);
               
                // Execute the insert
                int k = pst.executeUpdate();
                if (k == 1) {
                    JOptionPane.showMessageDialog(this, "User added successfully!");

                    // Clear fields
                    txtuname.setText("");
                    txtphone.setText("");
                    txtemail.setText("");
                    cmbrole.setSelectedIndex(-1);
                    txtpass.setText("");
                    

                    // Refresh table
                    autoBookID();
                    showTable();
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input! Please enter valid values.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_rSMaterialButtonRectangle2ActionPerformed

    private void rSMaterialButtonRectangle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonRectangle3ActionPerformed
        
   
    try {
        // Check if fields are empty
        if (txtuname.getText().trim().isEmpty() || txtphone.getText().trim().isEmpty() || 
            txtemail.getText().trim().isEmpty() || cmbrole.getSelectedIndex() == -1 ||
            txtpass.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(this, "All fields must be filled!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get input values
        String uname = txtuname.getText();
        String phone = txtphone.getText();
        String email = txtemail.getText();
        String role = cmbrole.getSelectedItem().toString();
        String pass = txtpass.getText();
        
        // Confirm update
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this user?", 
                                                    "Confirm", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // SQL query to update user details
            String sql = "UPDATE users SET email = ?, password = ?, contact = ?, role = ? WHERE username = ?";
            pst = con.prepareStatement(sql);
            
            pst.setString(1, email);
            pst.setString(2, pass);
            pst.setString(3, phone);
            pst.setString(4, role);
            pst.setString(5, uname);
            
            // Execute the update
            int k = pst.executeUpdate();
            if (k == 1) {
                JOptionPane.showMessageDialog(this, "User updated successfully!");

                // Clear fields
                txtuname.setText("");
                txtphone.setText("");
                txtemail.setText("");
                cmbrole.setSelectedIndex(-1);
                txtpass.setText("");
                
                // Refresh table
                showTable();
                 autoBookID();
            } else {
                JOptionPane.showMessageDialog(this, "User not found or no changes made!", "Update Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
    }


    }//GEN-LAST:event_rSMaterialButtonRectangle3ActionPerformed

    private void rSMaterialButtonRectangle4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonRectangle4ActionPerformed
      
    try {
        // Check if all fields are empty
        if (txtuname.getText().trim().isEmpty() || txtphone.getText().trim().isEmpty() || 
            txtemail.getText().trim().isEmpty() || cmbrole.getSelectedIndex() == -1 ||
            txtpass.getText().trim().isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "All fields must be filled!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get username
        String uname = txtuname.getText();
        
        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this user?", 
                                                    "Confirm", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // SQL query to delete user
            String sql = "DELETE FROM users WHERE username = ?";
            pst = con.prepareStatement(sql);
            pst.setString(1, uname);
            
            // Execute the delete
            int k = pst.executeUpdate();
            if (k == 1) {
                JOptionPane.showMessageDialog(this, "User deleted successfully!");

                // Clear fields
                txtuname.setText("");
                txtphone.setText("");
                txtemail.setText("");
                cmbrole.setSelectedIndex(-1);
                txtpass.setText("");
                
                // Refresh table
                showTable();
                 autoBookID();
            } else {
                JOptionPane.showMessageDialog(this, "User not found!", "Delete Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(staffUser.class.getName()).log(Level.SEVERE, null, ex);
    }


    }//GEN-LAST:event_rSMaterialButtonRectangle4ActionPerformed

    private void rSMaterialButtonRectangle5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonRectangle5ActionPerformed
       txtuid.setText("");
                txtuname.setText("");
                txtphone.setText("");
                txtemail.setText("");
                cmbrole.setSelectedIndex(-1);
                txtpass.setText("");
                
                autoBookID();

    }//GEN-LAST:event_rSMaterialButtonRectangle5ActionPerformed

    private void tblusersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblusersMouseClicked
        int selectedRow = tblusers.getSelectedRow();
    
    // Check if a row is selected
    if (selectedRow != -1) {
        // Populate the fields with values from the selected row
        txtuid.setText(tblusers.getValueAt(selectedRow, 0).toString());
        txtuname.setText(tblusers.getValueAt(selectedRow, 1).toString());
        txtphone.setText(tblusers.getValueAt(selectedRow, 2).toString());
        txtemail.setText(tblusers.getValueAt(selectedRow, 3).toString());
        txtpass.setText(tblusers.getValueAt(selectedRow, 4).toString());
        cmbrole.setSelectedItem(tblusers.getValueAt(selectedRow, 5).toString());
        
    }
    }//GEN-LAST:event_tblusersMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbrole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSMaterialButtonRectangle rSMaterialButtonRectangle2;
    private rojerusan.RSMaterialButtonRectangle rSMaterialButtonRectangle3;
    private rojerusan.RSMaterialButtonRectangle rSMaterialButtonRectangle4;
    private rojerusan.RSMaterialButtonRectangle rSMaterialButtonRectangle5;
    private rojerusan.RSTableMetro tblusers;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtpass;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtuid;
    private javax.swing.JTextField txtuname;
    // End of variables declaration//GEN-END:variables
}
